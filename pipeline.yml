jobs:
# - name: reconfigure
#   plan:
#   - get: pipeline-credentials
#     trigger: true
#   - get: nessus-manager-config
#     trigger: true
#   - set_pipeline: deploy-nessus-manager
#     file: nessus-manager-config/pipeline.yml
#     var_files:
#     - pipeline-credentials/cg-deploy-nessus-manager.yml
- name: deploy-nessus-manager
  plan:
  - in_parallel:
    # - get: pipeline-tasks
    - get: cg-deploy-nessus-manager
      trigger: true
      # passed: [reconfigure]
    # - get: common-prod
    #   trigger: true
    - get: cg-s3-nessus-manager-release
      trigger: true
    - get: nessus-manager-stemcell-jammy
      trigger: true
    - get: terraform-state-yml
      trigger: true
  # - task: debug
  #   config:
  #     platform: linux
  #     image_resource:
  #       type: registry-image
  #       source: { repository: busybox }
  #     inputs:
  #     - name: cg-deploy-nessus-manager
  #     - name: cg-s3-nessus-manager-release
  #     - name: nessus-manager-stemcell-jammy
  #     - name: terraform-state-yml
  #     run:
  #       path: sh
  #       args:
  #         - -exc
  #         - ls -R
  - put: nessus-manager-deployment
    params:
      manifest: cg-deploy-nessus-manager/nessus-manager-deployment.yml
      vars_files:
      - terraform-state-yml/terraform-state.yml
      releases:
      - cg-s3-nessus-manager-release/nessus-manager*.tgz
      stemcells:
      - nessus-manager-stemcell-jammy/*.tgz
  # on_failure:
  #   put: slack
  #   params:
  #     text: |
  #       :x: FAILED to deploy nessus-manager on production
  #       <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  #     channel: ((slack-channel))
  #     username: ((slack-username))
  #     icon_url: ((slack-icon-url))
  # on_success:
  #   put: slack
  #   params:
  #     text: |
  #       :white_check_mark: Successfully deployed nessus-manager on production
  #       <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  #     channel: ((slack-channel))
  #     username: ((slack-username))
  #     icon_url: ((slack-icon-url))

resources:
# - name: pipeline-tasks
#   type: git
#   source:
#     uri: https://github.com/cloud-gov/cg-pipeline-tasks
#     branch: main
#     commit_verification_keys: ((commit_verification_keys))

# - name: common-prod
#   type: s3-iam
#   source:
#     bucket: ((private-bucket-production))
#     versioned_file: nessus-manager-decrypted.yml
#     region_name: ((aws.region))

# - name: pipeline-credentials
#   type: s3-iam
#   source:
#     bucket: ((concourse-varz))
#     versioned_file: ((concourse-varz-file))
#     region_name: ((aws.region))

- name: cg-s3-nessus-manager-release
  type: s3-iam
  source:
    bucket: ((buckets.bosh_releases)) 
    private: true
    regexp: nessus-manager-(.*).tgz
    region_name: ((aws.region))

- name: cg-deploy-nessus-manager
  type: git
  source:
    uri: https://github.com/cloud-gov/cg-deploy-nessus-manager.git
    branch: f140
    commit_verification_keys: ((commit_verification_keys))

- name: nessus-manager-stemcell-jammy
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent

- name: nessus-manager-deployment
  type: bosh-deployment
  source:
    target: ((bosh_director.target))
    client: ((bosh_director.client_id))
    client_secret: ((bosh_director.client_secret))
    ca_cert: ((bosh_director.ca_cert))
    deployment: nessus-manager

- name: terraform-state-yml
  type: s3-iam
  source:
    bucket: ((buckets.terraform_state))
    versioned_file: ((buckets.terraform_state_file))
    region_name: ((aws.region))

# - name: slack
#   type: slack-notification
#   source:
#     url: ((slack_webhook_url))

resource_types:
# - name: slack-notification
#   type: docker-image
#   source:
#     repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
